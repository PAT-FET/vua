@import "../../../style/mixins/bem.scss";
@import "../../../style/mixins/elevation.scss";
@import "../../../style/mixins/misc.scss";
@import "../../../style/mixins/reset.scss";
@import "../../../style/var.scss";
@import "./mixins.scss";
@import "./var.scss";


@include b(v-button) {
    @include reset-component();
    @include btn();

    &.is-loading {
        pointer-events: none;
        &::before {
            display: block;
        }
    }

    &.is-circle {
        border-radius: 10rem;
        padding: 0;
    }

    &:before {
        position: absolute;
        top: -1px;
        left: -1px;
        bottom: -1px;
        right: -1px;
        background: #fff;
        opacity: .35;
        content: '';
        border-radius: inherit;
        z-index: 8;
        transition: opacity .2s;
        pointer-events: none;
        display: none;
    }

    @include e(content) {
        margin-left: 0;
        transition: margin-left 0.3s $ease-in-out;
        &.has-icon {
            margin-left: .5rem;
        }
    }

    // Size
    @include m(lg) {
        padding: 0 $padding-lg;
        height: $btn-height-lg;
        &.is-round {
            border-radius: $btn-height-lg/2;
        }
        &.is-circle {
            @include square($btn-height-lg);
        }
    }

    @include m(md) {
        padding: 0 $padding-md;
        height: $btn-height-md;

        &.is-round {
            border-radius: $btn-height-md/2;
        }
        &.is-circle {
            @include square($btn-height-md);
        }
    }

    @include m(sm) {
        padding: 0 $padding-sm;
        font-size: $font-size-sm;
        height: $btn-height-sm;

        &.is-round {
            border-radius: $btn-height-sm/2;
        }
        &.is-circle {
            @include square($btn-height-sm);
        }
    }

    // Block
    @include m(block) {
        width: 100%;
    }

    //Slim
    @include m(slim) {
        padding: 0 0.25rem;
        &>i{
            transform: scale(.83);
        }
    }

    // Type
    @include m(dashed) {
        border-style: dashed;
    }

    @include m(text) {
        border-color: transparent;
        background-color: transparent;
    }

    // float
    @include m(float) {
        @include elevation(4);
        &:hover, &:focus {
            @include elevation(8);
        }
    }
}